{% extends "layouts/base.njk" %}
{% from "components/header/header.njk" import header %}

{% block content %}
  {{ header({}) }}

  <main style="padding: 2rem;">
  </main>
{% endblock %}

{% block styles %}
  <link rel="stylesheet" href="/css/header/header.css">
{% endblock %}

{% block scripts %}
<script>
class HeaderComponent {
  constructor() {
    this.header = document.querySelector(".header");
    this.menuToggle = document.querySelector(".header__menu-toggle");
    this.drawer = document.querySelector(".header__drawer");
    this.drawerOverlay = document.querySelector(".header__drawer-overlay");
    this.drawerClose = document.querySelector(".header__drawer-close");

    this.init();
  }

  init() {
    if (!this.menuToggle || !this.drawer) return;

    this.bindEvents();
  }

  bindEvents() {
    // Toggle menu when hamburger button is clicked
    this.menuToggle.addEventListener("click", (e) => {
      e.preventDefault();
      this.toggleMenu();
    });

    // Close menu when overlay is clicked
    if (this.drawerOverlay) {
      this.drawerOverlay.addEventListener("click", () => {
        this.closeMenu();
      });
    }

    // Close menu when close button is clicked
    if (this.drawerClose) {
      this.drawerClose.addEventListener("click", () => {
        this.closeMenu();
      });
    }

    // Close menu when escape key is pressed
    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape" && this.isMenuOpen()) {
        this.closeMenu();
      }
    });

    // Close menu when window is resized to desktop size
    window.addEventListener("resize", () => {
      if (window.innerWidth > 768 && this.isMenuOpen()) {
        this.closeMenu();
      }
    });

    // Handle drawer links click (optional - for smooth closing)
    const drawerLinks = document.querySelectorAll(".header__drawer-link");
    drawerLinks.forEach((link) => {
      link.addEventListener("click", () => {
        // Add small delay to allow navigation
        setTimeout(() => {
          this.closeMenu();
        }, 100);
      });
    });
  }

  toggleMenu() {
    if (this.isMenuOpen()) {
      this.closeMenu();
    } else {
      this.openMenu();
    }
  }

  openMenu() {
    this.drawer.classList.add("is-open");
    this.menuToggle.classList.add("is-active");

    // Prevent body scroll when menu is open
    document.body.style.overflow = "hidden";

    // Focus management for accessibility
    this.drawerClose?.focus();

    // Add aria-expanded for accessibility
    this.menuToggle.setAttribute("aria-expanded", "true");
  }

  closeMenu() {
    this.drawer.classList.remove("is-open");
    this.menuToggle.classList.remove("is-active");

    // Restore body scroll
    document.body.style.overflow = "";

    // Return focus to menu toggle button
    this.menuToggle.focus();

    // Update aria-expanded for accessibility
    this.menuToggle.setAttribute("aria-expanded", "false");
  }

  isMenuOpen() {
    return this.drawer.classList.contains("is-open");
  }
}

// Initialize header component when DOM is loaded
document.addEventListener("DOMContentLoaded", () => {
  new HeaderComponent();
});

// Export for potential module usage
if (typeof module !== "undefined" && module.exports) {
  module.exports = HeaderComponent;
}
</script>
{% endblock %}
